class Fenw:
    def __init__(self, n):
        self.n = n
        self.tree = [0] * (n + 1)
    
    def update(self, index, delta):
        while index <= self.n:
            self.tree[index] += delta
            index += index & -index
            
    def query(self, index):
        s = 0
        while index > 0:
            s += self.tree[index]
            index -= index & -index
        return s

class Solution:
    def countSmaller(self, nums: List[int]) -> List[int]:
        n = len(nums)
        if n == 0:
            return []
        offset = 10000
        size = 20001
        fenw = Fenw(size)
        res = [0] * n
        
        for i in range(n - 1, -1, -1):
            x = nums[i] + offset
            res[i] = fenw.query(x)
            fenw.update(x + 1, 1)
            
        return res