import random

class RandomizedSet:
    def __init__(self):
        """
        Initialize the RandomizedSet object.
        """
        self.values = []  # List to store the actual values
        self.val_to_idx = {}  # Dictionary mapping values to their indices in the values list
        
    def insert(self, val: int) -> bool:
        """
        Inserts a value if not present. Returns true if the item was not present, false otherwise.
        """
        if val in self.val_to_idx:
            return False
        
        self.val_to_idx[val] = len(self.values)
        self.values.append(val)
        return True
        
    def remove(self, val: int) -> bool:
        """
        Removes a value if present. Returns true if the item was present, false otherwise.
        """
        if val not in self.val_to_idx:
            return False
        
        # Get the index of the value to remove
        idx_to_remove = self.val_to_idx[val]
        last_val = self.values[-1]
        
        # Move the last element to the position of the element to delete
        self.values[idx_to_remove] = last_val
        self.val_to_idx[last_val] = idx_to_remove
        
        # Remove the last element and update the dictionary
        self.values.pop()
        del self.val_to_idx[val]
        
        return True
    
    def getRandom(self) -> int:
        """
        Returns a random element from the current set.
        """
        return random.choice(self.values)