import random

class RandomizedSet:
    def __init__(self):
        # Dictionary to store value -> index mapping
        self.val_to_idx = {}
        # List to store values (for O(1) random access)
        self.values = []

    def insert(self, val: int) -> bool:
        # If val already exists, return false
        if val in self.val_to_idx:
            return False
        
        # Add val to the end of the list
        self.val_to_idx[val] = len(self.values)
        self.values.append(val)
        return True

    def remove(self, val: int) -> bool:
        # If val doesn't exist, return false
        if val not in self.val_to_idx:
            return False
        
        # Get the index of val and the last element
        idx = self.val_to_idx[val]
        last_val = self.values[-1]
        
        # Move the last element to the position of val
        self.values[idx] = last_val
        self.val_to_idx[last_val] = idx
        
        # Remove val from the list and dictionary
        self.values.pop()
        del self.val_to_idx[val]
        
        return True

    def getRandom(self) -> int:
        # Return a random element from the list
        return random.choice(self.values)