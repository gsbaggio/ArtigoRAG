import random

class RandomizedSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.values = []  # List to store the elements
        self.value_indices = {}  # Dictionary to map values to their indices in the list

    def insert(self, val: int) -> bool:
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        """
        if val in self.value_indices:
            return False
        self.value_indices[val] = len(self.values)
        self.values.append(val)
        return True

    def remove(self, val: int) -> bool:
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        """
        if val not in self.value_indices:
            return False
        
        # Get the index of the element to remove
        remove_idx = self.value_indices[val]
        # Get the last element in the list
        last_val = self.values[-1]
        
        # Move the last element to the place of the element to remove
        self.values[remove_idx] = last_val
        # Update the index of the last element in the dictionary
        self.value_indices[last_val] = remove_idx
        
        # Remove the element from the dictionary
        del self.value_indices[val]
        # Remove the last element from the list
        self.values.pop()
        
        return True

    def getRandom(self) -> int:
        """
        Get a random element from the set.
        """
        return random.choice(self.values)