class Solution:
    def maxProfit(self, k, prices):
        n = len(prices)
        if n == 0:
            return 0
            
        # If k is large enough, we can perform unlimited transactions
        if k >= n // 2:
            max_profit = 0
            for i in range(1, n):
                if prices[i] > prices[i - 1]:
                    max_profit += prices[i] - prices[i - 1]
            return max_profit

        # Initialize the buy and sell arrays for dynamic programming
        buy = [-float('inf')] * (k + 1)
        sell = [0] * (k + 1)

        for price in prices:
            for i in range(1, k + 1):
                buy[i] = max(buy[i], sell[i - 1] - price)
                sell[i] = max(sell[i], buy[i] + price)

        return sell[k]