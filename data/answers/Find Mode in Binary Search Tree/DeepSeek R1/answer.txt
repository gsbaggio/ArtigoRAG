class Solution {
    private Integer prev = null;
    private int count = 0;
    private int maxCount = 0;
    private List<Integer> modes = new ArrayList<>();
    
    public int[] findMode(TreeNode root) {
        prev = null;
        count = 0;
        maxCount = 0;
        modes.clear();
        
        inOrder(root);
        
        int[] result = new int[modes.size()];
        for (int i = 0; i < modes.size(); i++) {
            result[i] = modes.get(i);
        }
        return result;
    }
    
    private void inOrder(TreeNode node) {
        if (node == null) return;
        
        inOrder(node.left);
        
        if (prev == null) {
            count = 1;
        } else if (prev == node.val) {
            count++;
        } else {
            count = 1;
        }
        
        if (count > maxCount) {
            maxCount = count;
            modes.clear();
            modes.add(node.val);
        } else if (count == maxCount) {
            modes.add(node.val);
        }
        
        prev = node.val;
        
        inOrder(node.right);
    }
}