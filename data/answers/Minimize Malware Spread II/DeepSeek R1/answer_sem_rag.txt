class Solution:
    def minMalwareSpread(self, graph, initial):
        n = len(graph)
        adj = [[] for _ in range(n)]
        for i in range(n):
            for j in range(n):
                if i != j and graph[i][j] == 1:
                    adj[i].append(j)
        
        best_candidate = None
        min_infected = float('inf')
        
        for candidate in initial:
            visited = [False] * n
            queue = []
            idx = 0
            
            for node in initial:
                if node == candidate:
                    continue
                if not visited[node]:
                    visited[node] = True
                    queue.append(node)
                    
            while idx < len(queue):
                u = queue[idx]
                idx += 1
                for v in adj[u]:
                    if v == candidate or visited[v]:
                        continue
                    visited[v] = True
                    queue.append(v)
                    
            total_infected = sum(visited)
            
            if total_infected < min_infected:
                min_infected = total_infected
                best_candidate = candidate
            elif total_infected == min_infected and candidate < best_candidate:
                best_candidate = candidate
                
        return best_candidate