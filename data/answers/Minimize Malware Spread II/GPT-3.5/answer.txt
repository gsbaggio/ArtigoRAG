class Solution:
    def minMalwareSpread(self, graph, initial):
        def find(x):
            if p[x] != x:
                p[x] = find(p[x])
            return p[x]
        
        def union(x, y):
            xr, yr = find(x), find(y)
            if xr != yr:
                p[xr] = yr
                sz[yr] += sz[xr]
        
        N = len(graph)
        p = list(range(N))
        sz = [1] * N
        
        for i in range(N):
            for j in range(i + 1, N):
                if graph[i][j] == 1:
                    union(i, j)
        
        count = [0] * N
        for node in initial:
            count[find(node)] += 1
        
        ans = -1
        ans_size = -1
        
        for node in initial:
            root = find(node)
            if count[root] == 1:
                root_size = sz[root]
                if root_size > ans_size:
                    ans_size = root_size
                    ans = node
                elif root_size == ans_size and node < ans:
                    ans = node
        
        if ans == -1:
            ans = min(initial)
        
        return ans