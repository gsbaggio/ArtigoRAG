class Solution:
    def minMalwareSpread(self, graph, initial):
        def dfs(node, color):
            infected_nodes.add(node)
            count[color] += 1
            for neighbor, connected in enumerate(graph[node]):
                if connected == 1 and neighbor not in infected_nodes:
                    dfs(neighbor, color)

        n = len(graph)
        initial.sort()
        min_node = initial[0]
        min_infected = float('inf')

        for remove_node in initial:
            infected_nodes = set()
            count = [0] * n

            for node in initial:
                if node != remove_node and node not in infected_nodes:
                    dfs(node, node)

            if count[remove_node] < min_infected:
                min_node = remove_node
                min_infected = count[remove_node]

        return min_node