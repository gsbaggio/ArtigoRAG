#include <vector>
#include <unordered_set>

using namespace std;

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        // Initialize hash sets for rows, columns, and boxes
        vector<unordered_set<int>> rows(9);
        vector<unordered_set<int>> cols(9);
        vector<unordered_set<int>> boxes(9);

        // Iterate through each cell in the board
        for (int row = 0; row < 9; ++row) {
            for (int col = 0; col < 9; ++col) {
                // Skip empty cells
                if (board[row][col] == '.') continue;

                // Convert character to integer
                int num = board[row][col] - '0';

                // Calculate the index of the 3x3 sub-box
                int boxIndex = (row / 3) * 3 + col / 3;

                // Check for duplicates in the row, column, and box
                if (rows[row].count(num) || cols[col].count(num) || boxes[boxIndex].count(num)) {
                    return false;
                }

                // Add the number to the respective sets
                rows[row].insert(num);
                cols[col].insert(num);
                boxes[boxIndex].insert(num);
            }
        }

        // No duplicates found, the board is valid
        return true;
    }
};