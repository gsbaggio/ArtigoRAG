class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def reverseOddLevels(self, root):
        if not root:
            return None

        queue = [root]
        level = 1

        while queue:
            size = len(queue)

            for _ in range(size):
                node = queue.pop(0)

                if level % 2 == 1:
                    node.val = self.reverseList(node.val)

                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)

            level += 1

        return root

    def reverseList(self, lst):
        return lst[::-1] if isinstance(lst, list) else lst