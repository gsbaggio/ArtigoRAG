class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def reverseOddLevels(self, root):
        if not root:
            return root
        
        queue = [(root, 1)]
        levels = {}

        while queue:
            node, level = queue.pop(0)

            if level % 2 == 1:
                if level not in levels:
                    levels[level] = []
                levels[level].append(node)

            if node.left:
                queue.append((node.left, level + 1))
            if node.right:
                queue.append((node.right, level + 1))

        for level, nodes in levels.items():
            if level % 2 == 1:
                values = [node.val for node in nodes]
                values.reverse()
                for i, node in enumerate(nodes):
                    node.val = values[i]

        return root
