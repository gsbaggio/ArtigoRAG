#include <queue>
#include <vector>
#include <algorithm>

using namespace std;

// Definition for a binary tree node

class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        if (!root) {
            return nullptr;
        }

        queue<TreeNode*> q;
        q.push(root);
        int level = 1;

        while (!q.empty()) {
            int size = q.size();
            vector<int> values;

            for (int i = 0; i < size; i++) {
                TreeNode* node = q.front();
                q.pop();

                if (level % 2 == 1) {
                    values.push_back(node->val);
                }

                if (node->left) {
                    q.push(node->left);
                }
                if (node->right) {
                    q.push(node->right);
                }
            }

            if (!values.empty()) {
                reverse(values.begin(), values.end());
                int idx = 0;

                for (int i = 0; i < size; i++) {
                    TreeNode* node = q.front();
                    q.pop();

                    if (level % 2 == 1) {
                        node->val = values[idx++];
                    }

                    if (node->left) {
                        q.push(node->left);
                    }
                    if (node->right) {
                        q.push(node->right);
                    }
                }
            }

            level++;
        }

        return root;
    }
};