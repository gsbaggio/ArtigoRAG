class Solution:
    def wordBreak(self, s: str, wordDict: list[str]) -> bool:
        # Convert wordDict to a set for O(1) lookups
        wordSet = set(wordDict)
        
        # Create a DP array where dp[i] indicates if s[:i] can be segmented
        dp = [False] * (len(s) + 1)
        dp[0] = True  # Base case: empty string can always be segmented
        
        # Iterate through the string
        for i in range(1, len(s) + 1):
            for j in range(i):
                # Check if s[j:i] is a valid word and dp[j] is True
                if dp[j] and s[j:i] in wordSet:
                    dp[i] = True
                    break  # No need to check further for this i
        
        return dp[len(s)]