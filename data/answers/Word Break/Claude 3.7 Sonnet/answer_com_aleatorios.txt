class Solution:
    def wordBreak(self, s: str, wordDict: list[str]) -> bool:
        n = len(s)
        # dp[i] represents whether s[0:i] can be segmented into words from wordDict
        dp = [False] * (n + 1)
        dp[0] = True  # Empty string can always be segmented
        
        # Convert wordDict to set for O(1) lookups
        word_set = set(wordDict)
        
        for i in range(1, n + 1):
            for j in range(i):
                # If s[0:j] can be segmented and s[j:i] is in wordDict
                if dp[j] and s[j:i] in word_set:
                    dp[i] = True
                    break
        
        return dp[n]