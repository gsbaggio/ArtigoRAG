class Solution:
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        # Create a set from wordDict for O(1) lookups
        word_set = set(wordDict)
        
        # dp[i] represents whether s[0:i] can be segmented into dictionary words
        dp = [False] * (len(s) + 1)
        
        # Empty string can be segmented (base case)
        dp[0] = True
        
        # Fill the dp array
        for i in range(1, len(s) + 1):
            for j in range(i):
                # If s[0:j] can be segmented and s[j:i] is in the dictionary
                if dp[j] and s[j:i] in word_set:
                    dp[i] = True
                    break
        
        return dp[len(s)]