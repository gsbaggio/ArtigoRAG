from collections import defaultdict, deque

class Solution:
    def checkIfPrerequisite(self, numCourses, prerequisites, queries):
        graph = defaultdict(list)
        in_degree = [0] * numCourses

        for course, prereq in prerequisites:
            graph[prereq].append(course)
            in_degree[course] += 1

        def bfs(node):
            visited = set()
            queue = deque([node])

            while queue:
                current = queue.popleft()
                visited.add(current)

                for neighbor in graph[current]:
                    if neighbor not in visited:
                        queue.append(neighbor)

            return visited

        result = []
        for query in queries:
            if query[1] in bfs(query[0]):
                result.append(True)
            else:
                result.append(False)

        return result