class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        unordered_map<int, int> lastIndexMap; // Maps each number to its last seen index
        
        for (int i = 0; i < nums.size(); ++i) {
            int currentNum = nums[i];
            
            // Check if the current number has been seen before
            if (lastIndexMap.find(currentNum) != lastIndexMap.end()) {
                int lastIndex = lastIndexMap[currentNum];
                
                // Check if the difference between current index and last seen index is <= k
                if (abs(i - lastIndex) <= k) {
                    return true;
                }
            }
            
            // Update the last seen index of the current number
            lastIndexMap[currentNum] = i;
        }
        
        // No such pair found
        return false;
    }
};