class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        // Use an unordered set to maintain the sliding window
        unordered_set<int> window;

        for (int i = 0; i < nums.size(); ++i) {
            // If the current number is already in the set, we found a duplicate
            if (window.find(nums[i]) != window.end()) {
                return true;
            }

            // Add the current number to the set
            window.insert(nums[i]);

            // Maintain the sliding window size to be at most k
            if (window.size() > k) {
                window.erase(nums[i - k]);
            }
        }

        // If no duplicates are found within the given range, return false
        return false;
    }
};