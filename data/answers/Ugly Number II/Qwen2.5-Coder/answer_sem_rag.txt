class Solution:
    def nthUglyNumber(self, n):
        # Initialize the array to store the first n ugly numbers
        ugly = [1] * n
        
        # Initialize the three pointers
        i2 = i3 = i5 = 0
        
        # Generate the ugly numbers from 2 to n
        for i in range(1, n):
            # Calculate the next candidates
            next_ugly_by_2 = ugly[i2] * 2
            next_ugly_by_3 = ugly[i3] * 3
            next_ugly_by_5 = ugly[i5] * 5
            
            # Choose the smallest candidate
            next_ugly = min(next_ugly_by_2, next_ugly_by_3, next_ugly_by_5)
            ugly[i] = next_ugly
            
            # Increment the pointer(s) corresponding to the factor(s) used
            if next_ugly == next_ugly_by_2:
                i2 += 1
            if next_ugly == next_ugly_by_3:
                i3 += 1
            if next_ugly == next_ugly_by_5:
                i5 += 1
        
        # Return the nth ugly number
        return ugly[-1]