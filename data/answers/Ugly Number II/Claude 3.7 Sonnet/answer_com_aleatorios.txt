class Solution:
    def nthUglyNumber(self, n: int) -> int:
        ugly = [1]  # First ugly number is 1
        
        # Pointers for multiplying by 2, 3, and 5
        i2 = i3 = i5 = 0
        
        # Generate ugly numbers until we reach the nth one
        while len(ugly) < n:
            # Calculate the next potential ugly numbers
            next2 = ugly[i2] * 2
            next3 = ugly[i3] * 3
            next5 = ugly[i5] * 5
            
            # Find the minimum of the three potential next ugly numbers
            next_ugly = min(next2, next3, next5)
            ugly.append(next_ugly)
            
            # Move pointers forward
            if next_ugly == next2:
                i2 += 1
            if next_ugly == next3:
                i3 += 1
            if next_ugly == next5:
                i5 += 1
        
        return ugly[n-1]