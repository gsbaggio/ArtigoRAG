def min_steps_to_reduce_sum(t, test_cases):
    results = []

    for _ in range(t):
        n, k = test_cases[_][0]
        a = test_cases[_][1]

        total_sum = sum(a)
        diff = total_sum - k

        if diff <= 0:
            results.append(0)
        else:
            a.sort()
            steps = 0
            for i in range(n):
                if i == n - 1:
                    steps += diff
                else:
                    steps += (a[i + 1] - a[i]) * (n - i - 1)
                    if steps >= diff:
                        break

            results.append(steps)

    return results

# Test the function with the given example
t = 4
test_cases = [
    (1, 10, [20]),
    (2, 69, [6, 9]),
    (7, 8, [1, 2, 1, 3, 1, 2, 1]),
    (10, 1, [1, 2, 3, 1, 2, 6, 1, 6, 8, 10])
]

results = min_steps_to_reduce_sum(t, test_cases)
for result in results:
    print(result)