def solve():
    import sys
    input = sys.stdin.read
    data = input().split()
    
    t = int(data[0])
    queries = data[1:]
    
    MAX_N = 10**5
    
    # Precompute c(l, r) using a sieve-like approach
    c = [0] * (MAX_N + 1)
    for l in range(1, MAX_N + 1):
        for multiple in range(l, MAX_N + 1, l):
            c[multiple] += 1
    
    results = []
    idx = 0
    for _ in range(t):
        n, k = int(queries[idx]), int(queries[idx + 1])
        idx += 2
        
        # Divide [1, n] into k segments
        segment_size = n // k
        remainder = n % k
        
        total = 0
        start = 1
        for i in range(k):
            end = start + segment_size - 1
            if i < remainder:
                end += 1
            total += c[end] - c[start - 1]
            start = end + 1
        
        results.append(total)
    
    sys.stdout.write("\n".join(map(str, results)) + "\n")