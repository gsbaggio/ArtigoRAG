import math

# Function to calculate the number of integer pairs (i, j) such that l ≤ i ≤ j ≤ r and gcd(i, j) ≥ l
def c(l, r):
    res = 0
    for i in range(l, r+1):
        for j in range(i, r+1):
            if math.gcd(i, j) >= l:
                res += 1
    return res

# Function to find the minimum of the sum of c(x_i+1, x_i+1) over all integer sequences
def f(n, k):
    dp = [[0] * (n+1) for _ in range(k+1)]
    for i in range(1, n+1):
        dp[1][i] = c(1, i)
    
    for i in range(2, k+1):
        for j in range(1, n+1):
            dp[i][j] = float('inf')
            for x in range(j):
                dp[i][j] = min(dp[i][j], dp[i-1][x] + c(x+1, j))
    
    return dp[k][n]

# Input processing
t = int(input())
for _ in range(t):
    n, k = map(int, input().split())
    print(f(n, k))