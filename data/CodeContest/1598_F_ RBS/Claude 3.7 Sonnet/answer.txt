def solve():
    n = int(input())
    sequences = [input() for _ in range(n)]
    
    # Process each sequence
    seq_info = []
    for s in sequences:
        balance = 0
        min_balance = 0
        
        for c in s:
            balance += 1 if c == '(' else -1
            min_balance = min(min_balance, balance)
            
        seq_info.append((s, balance, min_balance))
    
    # Sort sequences to optimize prefix count
    # We want sequences with positive balance first, sorted by how low they dip
    seq_info.sort(key=lambda x: (-x[1], -x[2]))
    
    result = 0
    balance = 0
    
    for s, _, _ in seq_info:
        for c in s:
            balance += 1 if c == '(' else -1
            if balance == 0:
                result += 1
            if balance < 0:
                return result
    
    return result

print(solve())