def solve():
    import sys
    input = sys.stdin.read
    data = input().split()
    
    t = int(data[0])  # Number of test cases
    idx = 1
    results = []
    
    for _ in range(t):
        n, m = map(int, data[idx:idx+2])  # Dimensions of the board
        s = data[idx+2]  # Command sequence
        idx += 3
        
        # Track relative movement bounds
        x, y = 0, 0
        min_x, max_x = 0, 0
        min_y, max_y = 0, 0
        
        for command in s:
            if command == 'L':
                y -= 1
            elif command == 'R':
                y += 1
            elif command == 'U':
                x -= 1
            elif command == 'D':
                x += 1
            
            # Update bounds
            min_x = min(min_x, x)
            max_x = max(max_x, x)
            min_y = min(min_y, y)
            max_y = max(max_y, y)
        
        # Determine the starting cell
        start_row = 1 - min_x
        start_col = 1 - min_y
        
        # Ensure the starting cell is within bounds
        if 1 <= start_row + max_x <= n and 1 <= start_col + max_y <= m:
            results.append(f"{start_row} {start_col}")
        else:
            # Adjust if out of bounds (shouldn't happen with valid input)
            results.append("1 1")
    
    # Output all results
    sys.stdout.write("\n".join(results) + "\n")