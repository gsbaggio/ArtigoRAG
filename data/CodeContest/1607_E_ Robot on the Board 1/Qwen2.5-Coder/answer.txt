#include <bits/stdc++.h>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    int t;
    cin >> t;
    while (t--) {
        int n, m;
        cin >> n >> m;
        string s;
        cin >> s;

        int x = 0, y = 0;
        int min_x = 0, max_x = 0;
        int min_y = 0, max_y = 0;

        // Simulate the robot's movements
        for (char c : s) {
            if (c == 'L') x--;
            else if (c == 'R') x++;
            else if (c == 'D') y--;
            else if (c == 'U') y++;

            // Update the minimum and maximum coordinates
            min_x = min(min_x, x);
            max_x = max(max_x, x);
            min_y = min(min_y, y);
            max_y = max(max_y, y);
        }

        // Calculate the optimal starting position
        int r = 1 + (n - (max_y - min_y + 1)) / 2 - min_y;
        int c = 1 + (m - (max_x - min_x + 1)) / 2 - min_x;

        // Ensure the starting position is within the grid boundaries
        r = max(1, min(r, n));
        c = max(1, min(c, m));

        // Output the result
        cout << r << " " << c << "\n";
    }

    return 0;
}