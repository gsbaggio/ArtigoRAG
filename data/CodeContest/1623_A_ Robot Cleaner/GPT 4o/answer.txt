def time_to_clean(n, m, r_b, c_b, r_d, c_d):
    # Calculate time to reach the dirty cell's row
    if r_b <= r_d:
        time_row = r_d - r_b
    else:
        time_row = (n - r_b) + (n - r_d)
    
    # Calculate time to reach the dirty cell's column
    if c_b <= c_d:
        time_col = c_d - c_b
    else:
        time_col = (m - c_b) + (m - c_d)
    
    # Return the minimum time to clean the dirty cell
    return min(time_row, time_col)

def solve():
    import sys
    input = sys.stdin.read
    data = input().splitlines()
    
    t = int(data[0])  # Number of test cases
    results = []
    
    for i in range(1, t + 1):
        n, m, r_b, c_b, r_d, c_d = map(int, data[i].split())
        results.append(time_to_clean(n, m, r_b, c_b, r_d, c_d))
    
    # Print all results
    sys.stdout.write("\n".join(map(str, results)) + "\n")