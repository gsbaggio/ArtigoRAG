import sys

def main():
    data = sys.stdin.read().splitlines()
    t = int(data[0].strip())
    index = 1
    results = []
    for _ in range(t):
        while index < len(data) and data[index].strip() == "":
            index += 1
        if index >= len(data):
            break
        n = int(data[index].strip())
        index += 1
        dishes = []
        for i in range(n):
            parts = data[index].split()
            index += 1
            a = int(parts[0])
            b = int(parts[1])
            m = int(parts[2])
            dishes.append((a, b, m))
        
        groups = {}
        res_x = [0] * n
        res_y = [0] * n
        for idx, (a, b, m) in enumerate(dishes):
            T = a + b - m
            low = max(0, a - m)
            high = min(a, T)
            if T not in groups:
                groups[T] = []
            groups[T].append((low, high, a, b, m, idx))
        
        total_variety = 0
        for T, group_list in groups.items():
            group_list_sorted = sorted(group_list, key=lambda x: x[1])
            current = -10**18
            for (low, high, a, b, m, idx) in group_list_sorted:
                if current < low:
                    current = high
                    total_variety += 1
                x = a - current
                y = m - x
                res_x[idx] = x
                res_y[idx] = y
        
        results.append(str(total_variety))
        for i in range(n):
            results.append(f"{res_x[i]} {res_y[i]}")
    
    print("\n".join(results))

if __name__ == "__main__":
    main()