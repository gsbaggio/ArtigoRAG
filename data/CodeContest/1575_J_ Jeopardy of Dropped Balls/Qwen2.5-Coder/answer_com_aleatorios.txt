def dropping_balls(n, m, k, grid, columns):
    results = []
    
    for c in columns:
        x, y = 0, c - 1  # Start from the first row, column c
        
        while 0 <= x < n and 0 <= y < m:
            direction = grid[x][y]
            
            if direction == 1:  # Move right
                if y + 1 < m:
                    y += 1
                else:
                    break  # Ball leaves the grid to the right
            elif direction == 2:  # Move down
                if x + 1 < n:
                    x += 1
                else:
                    break  # Ball leaves the grid to the bottom
            elif direction == 3:  # Move left
                if y - 1 >= 0:
                    y -= 1
                else:
                    break  # Ball leaves the grid to the left
            
            # Update the cell to 2 (down)
            grid[x][y] = 2
        
        # Record the column where the ball leaves the grid
        if 0 <= x < n and 0 <= y < m:
            results.append(y + 1)
        else:
            results.append(y + 1)
    
    return results

# Read input
n, m, k = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
columns = list(map(int, input().split()))

# Get the results
results = dropping_balls(n, m, k, grid, columns)

# Print the results
print(" ".join(map(str, results)))