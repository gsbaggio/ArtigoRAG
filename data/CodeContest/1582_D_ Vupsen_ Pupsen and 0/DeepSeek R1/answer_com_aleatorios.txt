#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;

long long gcd(long long a, long long b) {
    a = abs(a);
    b = abs(b);
    if (b == 0) {
        return a;
    }
    while (b != 0) {
        a %= b;
        swap(a, b);
    }
    return a;
}

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<long long> a(n);
        for (int i = 0; i < n; i++) {
            cin >> a[i];
        }

        vector<long long> b(n, 0);

        if (n % 2 == 0) {
            for (int i = 0; i < n; i += 2) {
                long long x = a[i];
                long long y = a[i+1];
                long long g = gcd(x, y);
                b[i] = y / g;
                b[i+1] = -x / g;
            }
        } else {
            for (int i = 0; i < n-3; i += 2) {
                long long x = a[i];
                long long y = a[i+1];
                long long g = gcd(x, y);
                b[i] = y / g;
                b[i+1] = -x / g;
            }
            long long x = a[n-3];
            long long y = a[n-2];
            long long z = a[n-1];
            if (x + y != 0) {
                b[n-3] = z;
                b[n-2] = z;
                b[n-1] = -(x + y);
            } else if (x + z != 0) {
                b[n-3] = y;
                b[n-2] = -(x + z);
                b[n-1] = y;
            } else {
                b[n-3] = -(y + z);
                b[n-2] = x;
                b[n-1] = x;
            }
        }

        for (int i = 0; i < n; i++) {
            cout << b[i];
            if (i == n-1) cout << '\n';
            else cout << ' ';
        }
    }
    return 0;
}