def count_eversions_to_stabilize(arr):
    n = len(arr)
    
    # Check if the array is already sorted
    if all(arr[i] <= arr[i + 1] for i in range(n - 1)):
        return 0
    
    k = 0
    while True:
        k += 1
        x = arr[-1]
        left = [a for a in arr if a <= x]
        right = [a for a in arr if a > x]
        new_arr = left + right
        
        # Check if the array has stabilized
        if new_arr == arr:
            break
        
        arr = new_arr
    
    return k

# Read input
import sys
input = sys.stdin.read
data = input().split()

t = int(data[0])
index = 1
results = []

for _ in range(t):
    n = int(data[index])
    arr = list(map(int, data[index + 1:index + 1 + n]))
    index += 1 + n
    results.append(count_eversions_to_stabilize(arr))

# Print results
for result in results:
    print(result)