def minimum_eversions(test_cases):
    results = []
    for n, a in test_cases:
        max_seen = float('-inf')
        eversion_count = 0
        
        # Traverse the array from right to left
        for i in range(n - 1, -1, -1):
            if a[i] > max_seen:
                max_seen = a[i]
            else:
                eversion_count += 1
                max_seen = float('inf')  # Reset max_seen to start a new segment
        
        results.append(eversion_count)
    return results

# Input reading
t = int(input())
test_cases = []
for _ in range(t):
    n = int(input())
    a = list(map(int, input().split()))
    test_cases.append((n, a))

# Solve and output results
results = minimum_eversions(test_cases)
print("\n".join(map(str, results)))