import sys

def main():
    data = sys.stdin.read().split()
    t = int(data[0])
    index = 1
    results = []
    for _ in range(t):
        n = int(data[index]); index += 1
        a = list(map(int, data[index:index+n]))
        index += n
        if n == 0:
            results.append("0")
            continue
        M = max(a)
        if a[-1] == M:
            results.append("0")
            continue
            
        distinct_vals = sorted(set(a))
        m = len(distinct_vals)
        val_to_index = {}
        for idx, val in enumerate(distinct_vals):
            val_to_index[val] = idx
            
        comp_last_index = [-1] * m
        for i in range(n):
            v = a[i]
            comp_index = val_to_index[v]
            comp_last_index[comp_index] = i
            
        if m == 0:
            results.append("0")
            continue
            
        k = m.bit_length()
        st = [[0] * m for _ in range(k)]
        for i in range(m):
            st[0][i] = comp_last_index[i]
            
        for j in range(1, k):
            step = 1 << (j-1)
            for i in range(0, m - (1 << j) + 1):
                st[j][i] = max(st[j-1][i], st[j-1][i + step])
                
        def query(l, r):
            if l > r:
                return -1
            length = r - l + 1
            j = length.bit_length() - 1
            return max(st[j][l], st[j][r - (1 << j) + 1])
            
        current_val = a[-1]
        count = 0
        while current_val < M:
            count += 1
            comp_idx = val_to_index[current_val]
            if comp_idx + 1 >= m:
                break
            next_i = query(comp_idx+1, m-1)
            current_val = a[next_i]
            
        results.append(str(count))
        
    sys.stdout.write("\n".join(results))
    
if __name__ == "__main__":
    main()