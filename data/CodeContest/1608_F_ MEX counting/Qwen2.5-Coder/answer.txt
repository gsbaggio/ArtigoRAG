MOD = 998244353

def solve(n, k, b):
    # Initialize dp table
    dp = [[0] * (n + 1) for _ in range(n + 1)]
    dp[0][0] = 1
    
    for i in range(1, n + 1):
        mex_range = range(max(0, b[i - 1] - k), min(n + 1, b[i - 1] + k + 1))
        for j in mex_range:
            # Count the number of elements less than j
            count_less_than_j = sum(dp[i - 1][:j])
            # Count the number of elements equal to j
            count_equal_to_j = dp[i - 1][j]
            # Count the number of elements greater than j
            count_greater_than_j = sum(dp[i - 1][j + 1:])
            
            # If we add an element less than j, MEX remains j
            dp[i][j] += count_less_than_j
            dp[i][j] %= MOD
            
            # If we add an element equal to j, MEX becomes the smallest integer greater than j
            if j < n:
                dp[i][j + 1] += count_equal_to_j
                dp[i][j + 1] %= MOD
            
            # If we add an element greater than j, MEX remains j
            dp[i][j] += count_greater_than_j
            dp[i][j] %= MOD
    
    # Calculate the final answer
    mex_range = range(max(0, b[n - 1] - k), min(n + 1, b[n - 1] + k + 1))
    result = sum(dp[n][j] for j in mex_range) % MOD
    return result

# Read input
n, k = map(int, input().split())
b = list(map(int, input().split()))

# Solve and print the result
print(solve(n, k, b))