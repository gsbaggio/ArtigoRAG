def solve():
    n = int(input())
    cells = []
    for _ in range(n):
        x, y, c = map(int, input().split())
        cells.append((x, y, c))

    def check(selected_indices):
        if len(selected_indices) == 0:
            return True

        color1 = []
        color2 = []
        color3 = []

        for index in selected_indices:
            x, y, c = cells[index]
            if c == 1:
                color1.append((x, y))
            elif c == 2:
                color2.append((x, y))
            else:
                color3.append((x, y))

        if not (len(color1) == len(color2) == len(color3)):
            return False

        def find_rectangle(points):
            if not points:
                return None, None, None, None
            
            min_x = min(p[0] for p in points)
            max_x = max(p[0] for p in points)
            min_y = min(p[1] for p in points)
            max_y = max(p[1] for p in points)
            return min_x, min_y, max_x, max_y

        rect1 = find_rectangle(color1)
        rect2 = find_rectangle(color2)
        rect3 = find_rectangle(color3)

        if rect1[0] is None or rect2[0] is None or rect3[0] is None:
            return False
        
        def check_rectangle_contains_only_color(rect, color_points, other_color_points1, other_color_points2):
            min_x, min_y, max_x, max_y = rect
            for x, y in color_points:
                if not (min_x <= x <= max_x and min_y <= y <= max_y):
                    return False
            for x, y in other_color_points1:
                 if min_x <= x <= max_x and min_y <= y <= max_y:
                    return False
            for x, y in other_color_points2:
                 if min_x <= x <= max_x and min_y <= y <= max_y:
                    return False
            return True

        if not check_rectangle_contains_only_color(rect1, color1, color2, color3):
            return False
        if not check_rectangle_contains_only_color(rect2, color2, color1, color3):
            return False
        if not check_rectangle_contains_only_color(rect3, color3, color1, color2):
            return False

        def intersect(rect1, rect2):
            x11, y11, x12, y12 = rect1
            x21, y21, x22, y22 = rect2
            
            if x11 > x22 or x21 > x12 or y11 > y22 or y21 > y12:
                return False  # No intersection
            return True

        if intersect(rect1, rect2) or intersect(rect1, rect3) or intersect(rect2, rect3):
            return False

        return True

    max_k = 0
    for i in range(1 << n):
        selected_indices = []
        for j in range(n):
            if (i >> j) & 1:
                selected_indices.append(j)

        if len(selected_indices) % 3 == 0:
            counts = [0, 0, 0]
            for index in selected_indices:
                counts[cells[index][2]-1] += 1
            
            if len(selected_indices) > 0 and counts[0] == counts[1] == counts[2]:
                if check(selected_indices):
                    max_k = max(max_k, len(selected_indices))

    print(max_k)

solve()