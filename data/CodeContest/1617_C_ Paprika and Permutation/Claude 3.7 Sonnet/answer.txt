def min_operations_for_permutation():
    t = int(input())
    
    for _ in range(t):
        n = int(input())
        a = list(map(int, input().split()))
        
        # Count occurrences of each number in range 1...n
        count = {}
        for num in a:
            if 1 <= num <= n:
                count[num] = count.get(num, 0) + 1
        
        # Identify missing and duplicate numbers
        missing = []
        for i in range(1, n + 1):
            if i not in count:
                missing.append(i)
        
        # Numbers to change
        to_change = []
        for i in range(n):
            if a[i] > n or (a[i] in count and count[a[i]] > 1):
                to_change.append(i)
                if a[i] <= n:
                    count[a[i]] -= 1
        
        # Check if solution is possible
        if len(missing) != len(to_change):
            print(-1)
            continue
        
        # Compute minimum operations
        operations = len(missing)
        print(operations)

min_operations_for_permutation()