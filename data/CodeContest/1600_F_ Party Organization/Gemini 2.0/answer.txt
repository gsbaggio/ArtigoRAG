def solve():
    n, m = map(int, input().split())
    edges = [[] for _ in range(n + 1)]
    for _ in range(m):
        u, v = map(int, input().split())
        edges[u].append(v)
        edges[v].append(u)

    def is_clique(subset):
        for i in range(len(subset)):
            for j in range(i + 1, len(subset)):
                if subset[j] not in edges[subset[i]]:
                    return False
        return True

    def is_independent_set(subset):
        for i in range(len(subset)):
            for j in range(i + 1, len(subset)):
                if subset[j] in edges[subset[i]]:
                    return False
        return True

    for i in range(1, n + 1):
        for j in range(i + 1, n + 1):
            for k in range(j + 1, n + 1):
                for l in range(k + 1, n + 1):
                    for p in range(l + 1, n + 1):
                        subset = [i, j, k, l, p]
                        if is_clique(subset) or is_independent_set(subset):
                            print(*subset)
                            return
    print("-1")

solve()