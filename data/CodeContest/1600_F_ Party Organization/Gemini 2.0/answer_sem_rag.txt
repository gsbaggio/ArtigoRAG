#include <iostream>
#include <vector>

using namespace std;

int main() {
    int n, m;
    cin >> n >> m;

    vector<vector<bool>> adj(n + 1, vector<bool>(n + 1, false));
    for (int i = 0; i < m; ++i) {
        int u, v;
        cin >> u >> v;
        adj[u][v] = true;
        adj[v][u] = true;
    }

    for (int i = 1; i <= n; ++i) {
        for (int j = i + 1; j <= n; ++j) {
            for (int k = j + 1; k <= n; ++k) {
                for (int l = k + 1; l <= n; ++l) {
                    for (int p = l + 1; p <= n; ++p) {
                        // Check if all are friends
                        bool all_friends = true;
                        vector<int> party = {i, j, k, l, p};
                        for (int x = 0; x < 5; ++x) {
                            for (int y = x + 1; y < 5; ++y) {
                                if (!adj[party[x]][party[y]]) {
                                    all_friends = false;
                                    break;
                                }
                            }
                            if (!all_friends) break;
                        }

                        if (all_friends) {
                            cout << i << " " << j << " " << k << " " << l << " " << p << endl;
                            return 0;
                        }

                        // Check if no one is friends
                        bool no_friends = true;
                        for (int x = 0; x < 5; ++x) {
                            for (int y = x + 1; y < 5; ++y) {
                                if (adj[party[x]][party[y]]) {
                                    no_friends = false;
                                    break;
                                }
                            }
                            if (!no_friends) break;
                        }

                        if (no_friends) {
                            cout << i << " " << j << " " << k << " " << l << " " << p << endl;
                            return 0;
                        }
                    }
                }
            }
        }
    }

    cout << -1 << endl;

    return 0;
}