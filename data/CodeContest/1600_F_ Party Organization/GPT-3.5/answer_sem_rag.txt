from collections import defaultdict

def can_party_succeed(N, friendships):
    graph = defaultdict(list)
    for u, v in friendships:
        graph[u].append(v)
        graph[v].append(u)

    for i in range(1, N + 1):
        if len(graph[i]) >= 4:
            return [i] + graph[i][:4]

    for i in range(1, N + 1):
        friends = set(graph[i])
        for j in graph[i]:
            friends.update(graph[j])
        friends.add(i)

        if len(friends) >= 5:
            return [i] + [x for x in range(1, N + 1) if x not in friends][:4]

    return [-1]

# Taking input
N, M = map(int, input().split())
friendships = [tuple(map(int, input().split())) for _ in range(M)]

# Check if a successful party can be organized
result = can_party_succeed(N, friendships)

# Output the result
print(*result)