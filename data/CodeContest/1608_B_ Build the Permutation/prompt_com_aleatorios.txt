CURRENT QUESTION:
You are given three integers n, a, b. Determine if there exists a permutation p_1, p_2, …, p_n of integers from 1 to n, such that:

  * There are exactly a integers i with 2 ≤ i ≤ n-1 such that p_{i-1} < p_i > p_{i+1} (in other words, there are exactly a local maximums).

  * There are exactly b integers i with 2 ≤ i ≤ n-1 such that p_{i-1} > p_i < p_{i+1} (in other words, there are exactly b local minimums).




If such permutations exist, find any such permutation.

Input

The first line of the input contains a single integer t (1 ≤ t ≤ 10^4) — the number of test cases. The description of test cases follows.

The only line of each test case contains three integers n, a and b (2 ≤ n ≤ 10^5, 0 ≤ a,b ≤ n).

The sum of n over all test cases doesn't exceed 10^5.

Output

For each test case, if there is no permutation with the requested properties, output -1.

Otherwise, print the permutation that you are found. If there are several such permutations, you may print any of them.

Example

Input


3
4 1 1
6 1 2
6 4 0


Output


1 3 2 4
4 2 3 1 5 6
-1

Note

In the first test case, one example of such permutations is [1, 3, 2, 4]. In it p_1 < p_2 > p_3, and 2 is the only such index, and p_2> p_3 < p_4, and 3 the only such index.

One can show that there is no such permutation for the third test case.

EXAMPLE QUESTIONS:
Example question 1:
Name: p03438 AtCoder Petrozavodsk Contest 001 - Two Arrays
Tags: ['']
Description: You are given two integer sequences of length N: a_1,a_2,..,a_N and b_1,b_2,..,b_N. Determine if we can repeat the following operation zero or more times so that the sequences a and b become equal.

Operation: Choose two integers i and j (possibly the same) between 1 and N (inclusive), then perform the following two actions simultaneously:

* Add 2 to a_i.
* Add 1 to b_j.

Constraints

* 1 ≤ N ≤ 10 000
* 0 ≤ a_i,b_i ≤ 10^9 (1 ≤ i ≤ N)
* All input values are integers.

Input

Input is given from Standard Input in the following format:


N
a_1 a_2 .. a_N
b_1 b_2 .. b_N


Output

If we can repeat the operation zero or more times so that the sequences a and b become equal, print `Yes`; otherwise, print `No`.

Examples

Input

3
1 2 3
5 2 2


Output

Yes


Input

5
3 1 4 1 5
2 7 1 8 2


Output

No


Input

5
2 7 1 8 2
3 1 4 1 5


Output

No
Difficulty: 0
Solutions: #include <bits/stdc++.h> 

using namespace std;

#define ll long long

const int N = (int)1e4 + 7;

int a[N], b[N];

int main() {    
	int n; scanf("%d", &n);
	ll sum = 0, sum1 = 0, c = 0;
	for (int i = 1; i <= n; i++) {
		scanf("%d", &a[i]);
		sum += a[i];
	}
	for (int i = 1; i <= n; i++) {
		scanf("%d", &b[i]);
		sum1 += b[i];
		if (b[i] > a[i]) {
			c += (b[i] - a[i] + 1) / 2;
		}
	}
	if (c <= sum1 - sum) puts("Yes");
	else puts("No");
}


INSTRUCTIONS:
Solve the current question.
Provide:
1. A complete and efficient code solution, optimized for both time and space complexity.
2. A detailed explanation of the solution, including:
   - The intuition behind the approach;
   - Time and space complexity;
   - Important considerations about the algorithm.
3. If the language has classes, implement in 'Solution' class. Any language is accepted.
4. You can use the example questions as general references for coding patterns and structure, but solve the current problem independently.
5. Don't use any external libraries. Don't need to import any libraries.
