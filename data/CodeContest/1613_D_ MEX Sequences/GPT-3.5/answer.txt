MOD = 998244353

def mex_correct_subsequences(t, test_cases):
    def calculate_mex_correct_subsequence(n, a):
        dp = [0] * (n + 1)
        c = [[0] * (n + 1) for _ in range(n + 1)]
        
        dp[0] = 1
        for i in range(1, n + 1):
            dp[i] = 1
            c[i][0] = 1
            for j in range(1, i + 1):
                c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % MOD
        
        ans = 0
        for i in range(1, n + 1):
            if i + a[i - 1] <= n and a[i - 1] > 0:
                ans = (ans + dp[i - 1] * c[n - i][a[i - 1]]) % MOD
                for j in range(i + a[i - 1], n + 1):
                    dp[j] = (dp[j] + dp[i - 1] * c[j - i][a[i - 1]]) % MOD
        
        return ans

    results = []
    for _ in range(t):
        n, a = test_cases[_]
        results.append(calculate_mex_correct_subsequence(n, a))
    
    return results

# Test cases
test_cases = [
    (4, [3, [0, 2, 1]]),
    (2, [2, [1, 0]]),
    (5, [5, [0, 0, 0, 0, 0]]),
    (4, [4, [0, 1, 2, 3]])
]

# Number of test cases and the test cases
t = len(test_cases)
print(mex_correct_subsequences(t, test_cases))