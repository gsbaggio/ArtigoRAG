def modular_exponentiation(base, exp, mod):
    """Efficient modular exponentiation."""
    result = 1
    while exp > 0:
        if exp % 2 == 1:
            result = (result * base) % mod
        base = (base * base) % mod
        exp //= 2
    return result

def solve():
    import sys
    input = sys.stdin.read
    n, M = map(int, input().split())
    
    # The number of perfect sequences is (n + 1)^n % M
    base = n + 1
    exp = n
    result = modular_exponentiation(base, exp, M)
    
    print(result)
