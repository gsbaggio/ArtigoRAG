def max_stones_in_smallest_heap(t, test_cases):
    for _ in range(t):
        n = test_cases[_][0]
        heaps = test_cases[_][1]

        prev_prev = heaps[n-3]
        prev = heaps[n-2]
        curr = heaps[n-1]

        min_stones = 0
        for i in range(n - 3, -1, -1):
            d = min(curr // 3, prev_prev, prev // 2)
            curr -= 3 * d
            prev += d
            prev_prev += 2 * d
            if i > 0:
                prev_prev = prev
                prev = curr
                curr = heaps[i-1]
            min_stones = min(curr, prev, prev_prev)

        print(min_stones)

# Test cases
t = 4
test_cases = [
    (4, [1, 2, 10, 100]),
    (4, [100, 100, 100, 1]),
    (5, [5, 1, 1, 1, 8]),
    (6, [1, 2, 3, 4, 5, 6])
]

max_stones_in_smallest_heap(t, test_cases)