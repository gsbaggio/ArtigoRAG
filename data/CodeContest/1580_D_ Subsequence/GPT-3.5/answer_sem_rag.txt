def maximize_subsequence_value(n, m, a):
    INF = float('inf')
    dp = [[[-INF for _ in range(m + 1)] for _ in range(m + 1)] for _ in range(n + 1)]
    dp[0][0][0] = 0

    for i in range(1, n + 1):
        for j in range(min(i, m) + 1):
            for k in range(j + 1):
                if j > 0 and k > 0:
                    dp[i][j][k] = max(dp[i-1][j-1][k-1] + j * a[i-1], dp[i-1][j][k])
                else:
                    dp[i][j][k] = dp[i-1][j][k]

    ans = max(dp[n][m][m] for n in range(1, n + 1))
    return ans

# Input parsing
n, m = map(int, input().split())
a = list(map(int, input().split()))

# Call the function and print the result
result = maximize_subsequence_value(n, m, a)
print(result)