#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> a(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }

    // Initialize dp array
    const int MAX_XOR = 1024;
    vector<bool> dp(MAX_XOR, false);
    dp[0] = true;

    for (int i = 0; i < n; ++i) {
        vector<bool> new_dp(dp);
        for (int j = 0; j < MAX_XOR; ++j) {
            if (dp[j]) {
                new_dp[j ^ a[i]] = true;
            }
        }
        dp = new_dp;
    }

    // Collect all possible XOR values
    vector<int> result;
    for (int j = 0; j < MAX_XOR; ++j) {
        if (dp[j]) {
            result.push_back(j);
        }
    }

    // Output the result
    cout << result.size() << "\n";
    for (int j = 0; j < result.size(); ++j) {
        if (j > 0) {
            cout << " ";
        }
        cout << result[j];
    }
    cout << "\n";

    return 0;
}