def solve():
    import sys
    input = sys.stdin.read
    data = input().split()
    
    t = int(data[0])  # Number of test cases
    idx = 1
    results = []
    
    for _ in range(t):
        n, c = int(data[idx]), data[idx + 1]
        s = data[idx + 2]
        idx += 3
        
        # Check if the string is already uniform
        if all(ch == c for ch in s):
            results.append("0")
            continue
        
        # Check divisors of n
        divisors = []
        for x in range(1, n + 1):
            if n % x == 0:
                divisors.append(x)
        
        # Find a valid x
        valid_x = -1
        for x in divisors:
            if all(s[i - 1] == c for i in range(x, n + 1, x)):
                valid_x = x
                break
        
        if valid_x != -1:
            results.append(f"1\n{valid_x}")
        else:
            # If no single x works, use two operations
            results.append(f"2\n{n} {n - 1}")
    
    sys.stdout.write("\n".join(results) + "\n")