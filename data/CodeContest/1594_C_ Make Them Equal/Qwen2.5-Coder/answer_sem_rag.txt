def min_operations_to_transform_string(t, test_cases):
    results = []
    
    for n, c, s in test_cases:
        # Initialize the to_change array
        to_change = [s[i] != c for i in range(n)]
        
        operations = []
        while True:
            max_count = 0
            best_x = 0
            
            # Find the best x to maximize the number of changes
            for x in range(1, n + 1):
                count = 0
                for i in range(n):
                    if to_change[i] and (i + 1) % x != 0:
                        count += 1
                if count > max_count:
                    max_count = count
                    best_x = x
            
            if best_x == 0:
                break
            
            # Perform the operation with the best x
            operations.append(best_x)
            for i in range(n):
                if (i + 1) % best_x != 0:
                    to_change[i] = False
        
        results.append((len(operations), operations))
    
    return results

# Read input
import sys
input = sys.stdin.read().splitlines()

t = int(input[0])
test_cases = []
index = 1
for _ in range(t):
    n, c = input[index].split()
    n = int(n)
    s = input[index + 1]
    test_cases.append((n, c, s))
    index += 2

# Get results
results = min_operations_to_transform_string(t, test_cases)

# Print results
for result in results:
    print(result[0])
    if result[0] > 0:
        print(" ".join(map(str, result[1])))