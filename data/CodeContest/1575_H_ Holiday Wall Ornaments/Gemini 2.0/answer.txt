def solve():
    n, m = map(int, input().split())
    a = input()
    b = input()
    
    results = []
    for k in range(n - m + 2):
        min_changes = float('inf')
        
        for i in range(1 << n):
            temp_a = list(a)
            changes = 0
            
            # Create a modified version of 'a' based on the bitmask 'i'
            for j in range(n):
                if (i >> j) & 1:
                    changes += 1
                    temp_a[j] = '1' if a[j] == '0' else '0'
            
            temp_a_str = "".join(temp_a)
            
            # Count occurrences of 'b' in the modified string
            occurrences = 0
            for j in range(n - m + 1):
                if temp_a_str[j:j+m] == b:
                    occurrences += 1
            
            # Check if the number of occurrences matches 'k'
            if occurrences == k:
                min_changes = min(min_changes, changes)
        
        if min_changes == float('inf'):
            results.append(-1)
        else:
            results.append(min_changes)
    
    print(*results)

solve()