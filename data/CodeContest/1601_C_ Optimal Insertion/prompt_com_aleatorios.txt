CURRENT QUESTION:
You are given two arrays of integers a_1, a_2, …, a_n and b_1, b_2, …, b_m.

You need to insert all elements of b into a in an arbitrary way. As a result you will get an array c_1, c_2, …, c_{n+m} of size n + m.

Note that you are not allowed to change the order of elements in a, while you can insert elements of b at arbitrary positions. They can be inserted at the beginning, between any elements of a, or at the end. Moreover, elements of b can appear in the resulting array in any order.

What is the minimum possible number of inversions in the resulting array c? Recall that an inversion is a pair of indices (i, j) such that i < j and c_i > c_j.

Input

Each test contains multiple test cases. The first line contains the number of test cases t (1 ≤ t ≤ 10^4). Description of the test cases follows.

The first line of each test case contains two integers n and m (1 ≤ n, m ≤ 10^6).

The second line of each test case contains n integers a_1, a_2, …, a_n (1 ≤ a_i ≤ 10^9).

The third line of each test case contains m integers b_1, b_2, …, b_m (1 ≤ b_i ≤ 10^9).

It is guaranteed that the sum of n for all tests cases in one input doesn't exceed 10^6. The sum of m for all tests cases doesn't exceed 10^6 as well.

Output

For each test case, print one integer — the minimum possible number of inversions in the resulting array c.

Example

Input


3
3 4
1 2 3
4 3 2 1
3 3
3 2 1
1 2 3
5 4
1 3 5 3 1
4 3 6 1


Output


0
4
6

Note

Below is given the solution to get the optimal answer for each of the example test cases (elements of a are underscored).

  * In the first test case, c = [\underline{1}, 1, \underline{2}, 2, \underline{3}, 3, 4]. 
  * In the second test case, c = [1, 2, \underline{3}, \underline{2}, \underline{1}, 3]. 
  * In the third test case, c = [\underline{1}, 1, 3, \underline{3}, \underline{5}, \underline{3}, \underline{1}, 4, 6]. 

EXAMPLE QUESTIONS:
Example question 1:
Name: 1538_G. Gift Set
Tags: ['binary search', 'greedy', 'math', 'ternary search']
Description: Polycarp has x of red and y of blue candies. Using them, he wants to make gift sets. Each gift set contains either a red candies and b blue candies, or a blue candies and b red candies. Any candy can belong to at most one gift set.

Help Polycarp to find the largest number of gift sets he can create.

For example, if x = 10, y = 12, a = 5, and b = 2, then Polycarp can make three gift sets: 

  * In the first set there will be 5 red candies and 2 blue candies; 
  * In the second set there will be 5 blue candies and 2 red candies; 
  * In the third set will be 5 blue candies and 2 red candies. 



Note that in this example there is one red candy that Polycarp does not use in any gift set.

Input

The first line contains an integer t (1 ≤ t ≤ 10^4). Then t test cases follow.

Each test case consists of a single string containing four integers x, y, a, and b (1 ≤ x, y, a, b ≤ 10^9).

Output

For each test case, output one number — the maximum number of gift sets that Polycarp can make.

Example

Input


9
10 12 2 5
1 1 2 2
52 311 13 27
1000000000 1000000000 1 1
1000000000 1 1 1000000000
1 1000000000 1000000000 1
1 2 1 1
7 8 1 2
4 1 2 3


Output


3
0
4
1000000000
1
1
1
5
0
Difficulty: 13
Solutions: import java.util.*;
import java.io.*;
 
public class Main2 {
	static class FastReader{ BufferedReader br;StringTokenizer st;public FastReader(){br = new BufferedReader(new InputStreamReader(System.in));}String next(){while (st == null || !st.hasMoreElements()){try{st = new StringTokenizer(br.readLine());}catch (IOException  e){e.printStackTrace();}}return st.nextToken();}int nextInt(){ return Integer.parseInt(next());}long nextLong(){return Long.parseLong(next());}double nextDouble(){return Double.parseDouble(next());}String nextLine(){String str = ""; try{str = br.readLine(); } catch (IOException e) {e.printStackTrace();} return str; }}
	static long mod = (long)(1e9+7);
//	static long mod = 998244353;
//	static Scanner sc = new Scanner(System.in);
	static FastReader sc = new FastReader();
	static PrintWriter out = new PrintWriter(System.out);
	public static void main (String[] args) {
		int t = 1;
    	t = sc.nextInt();
	    z : for(int tc=1;tc<=t;tc++) {
	    	long x=sc.nextLong(),y = sc.nextLong(), a = sc.nextLong(), b = sc.nextLong();
	    	if(x>y) {
	    		long temp = x;
	    		x = y;
	    		y = temp;
	    	}
	    	if(a>b) {
	    		long temp = a;
	    		a = b;
	    		b = temp;
	    	}
	    	long l = 0, h = (long)(1e9+1);
	    	long ans = 0;
	    	while(l<=h) {
	    		long mid = (l+h)/2;
	    		boolean is = false;
	    		long lo = 0, hi = mid;
	    		while(lo<=hi) {
	    			long tm = (lo+hi)/2;
	    			long tma = mid - tm;
	    			if(y/b<tm) {
	    				hi = tm-1;
	    				continue;
	    			}
	    			if(x/b<tma) {
	    				lo = tm+1;
	    				continue;
	    			}
	    			long ty = y - tm*b;
	    			long tx = x - tma*b;
	    			if(ty/a<tma) {
	    				hi = tm-1;
	    				continue;
	    			}
	    			if(tx/a<tm) {
	    				lo = tm+1;
	    				continue;
	    			}
	    			is = true;
	    			break;
	    		}
	    		if(is) {
	    			ans = mid;
	    			l = mid+1;
	    		}
	    		else {
	    			h = mid-1;
	    		}
	    	}
	    	out.write(ans+"\n");
	    }
		out.close();
	}
	static long gcd(long a,long b) { if(b==0) return a; return gcd(b,a%b); }
	private static void sort(int[] a) {List<Integer> k = new ArrayList<>();for(int val : a) k.add(val);Collections.sort(k);for(int i=0;i<a.length;i++) a[i] = k.get(i);}
	private static void ini(List<Integer>[] tre2){for(int i=0;i<tre2.length;i++){tre2[i] = new ArrayList<>();}}
	private static void init(List<int[]>[] tre2){for(int i=0;i<tre2.length;i++){tre2[i] = new ArrayList<>();}}
	private static void sort(long[] a) {List<Long> k = new ArrayList<>();for(long val : a) k.add(val);Collections.sort(k);for(int i=0;i<a.length;i++) a[i] = k.get(i);}
}

Example question 2:
Name: 421_A. Pasha and Hamsters
Tags: ['constructive algorithms', 'implementation']
Description: Pasha has two hamsters: Arthur and Alexander. Pasha put n apples in front of them. Pasha knows which apples Arthur likes. Similarly, Pasha knows which apples Alexander likes. Pasha doesn't want any conflict between the hamsters (as they may like the same apple), so he decided to distribute the apples between the hamsters on his own. He is going to give some apples to Arthur and some apples to Alexander. It doesn't matter how many apples each hamster gets but it is important that each hamster gets only the apples he likes. It is possible that somebody doesn't get any apples.

Help Pasha distribute all the apples between the hamsters. Note that Pasha wants to distribute all the apples, not just some of them.

Input

The first line contains integers n, a, b (1 ≤ n ≤ 100; 1 ≤ a, b ≤ n) — the number of apples Pasha has, the number of apples Arthur likes and the number of apples Alexander likes, correspondingly.

The next line contains a distinct integers — the numbers of the apples Arthur likes. The next line contains b distinct integers — the numbers of the apples Alexander likes.

Assume that the apples are numbered from 1 to n. The input is such that the answer exists.

Output

Print n characters, each of them equals either 1 or 2. If the i-h character equals 1, then the i-th apple should be given to Arthur, otherwise it should be given to Alexander. If there are multiple correct answers, you are allowed to print any of them.

Examples

Input

4 2 3
1 2
2 3 4


Output

1 1 2 2


Input

5 5 2
3 4 1 2 5
2 3


Output

1 1 1 1 1
Difficulty: 7
Solutions: n, a, b = map(int, input().split())
x = set(map(int, input().split()))
y = set(map(int, input().split()))
y -= x
s = ""
for i in range(1, n + 1, 1):
    if i in x:
        s += str(1) + " "
    else:
        s += str(2) + " "
print(s)

Example question 3:
Name: p02969 AtCoder Beginner Contest 134 - Dodecagon
Tags: ['']
Description: It is known that the area of a regular dodecagon inscribed in a circle of radius a is 3a^2.

Given an integer r, find the area of a regular dodecagon inscribed in a circle of radius r.

Constraints

* 1 \leq r \leq 100
* r is an integer.

Input

Input is given from Standard Input in the following format:


r


Output

Print an integer representing the area of the regular dodecagon.

Examples

Input

4


Output

48


Input

15


Output

675


Input

80


Output

19200
Difficulty: 0
Solutions: x = int(input())
print(3*pow(x,2))



INSTRUCTIONS:
Solve the current question.
Provide:
1. A complete and efficient code solution, optimized for both time and space complexity.
2. A detailed explanation of the solution, including:
   - The intuition behind the approach;
   - Time and space complexity;
   - Important considerations about the algorithm.
3. If the language has classes, implement in 'Solution' class. Any language is accepted.
4. You can use the example questions as general references for coding patterns and structure, but solve the current problem independently.
5. Don't use any external libraries. Don't need to import any libraries.
