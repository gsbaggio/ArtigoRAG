MOD = 998244353

def solve(n, k, x):
    if n == 1:
        if k == 0:
            return 1 if x == 0 else 2
        return 1 if (1 << (k - 1)) & x == 0 else 0

    dp = [0] * 4  # dp[i] represents the number of sequences ending with i, where i can be 0, 1, 2, or 3

    num_ways = [0] * 4
    num_ways[0] = 1

    for i in range(1, n):
        new_dp = [0] * 4

        new_dp[0] = (num_ways[0] + num_ways[1] + num_ways[2] + num_ways[3]) % MOD
        new_dp[1] = num_ways[0]
        new_dp[2] = num_ways[1]
        new_dp[3] = (num_ways[2] + num_ways[3]) % MOD

        num_ways = new_dp

    result = 0
    for i in range(4):
        if i ^ x < 4:
            result = (result + num_ways[i]) % MOD

    return result

# Input
t = int(input().strip())
for _ in range(t):
    n, k, x = map(int, input().split())
    print(solve(n, k, x))