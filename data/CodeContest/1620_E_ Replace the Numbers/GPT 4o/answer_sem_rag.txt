def process_queries():
    import sys
    input = sys.stdin.read
    data = input().splitlines()
    
    # Number of queries
    q = int(data[0])
    
    # Result array to store the final output
    result = []
    
    # Replacement map to handle lazy replacements
    replacement_map = {}

    # Helper function to find the current value of a number after replacements
    def find(x):
        if x not in replacement_map:
            return x
        # Path compression
        replacement_map[x] = find(replacement_map[x])
        return replacement_map[x]

    # Process each query
    for i in range(1, q + 1):
        parts = data[i].split()
        if parts[0] == "1":
            # "1 x" query: Add the current value of x to the result array
            x = int(parts[1])
            result.append(find(x))
        elif parts[0] == "2":
            # "2 x y" query: Replace all occurrences of x with y
            x, y = int(parts[1]), int(parts[2])
            replacement_map[find(x)] = find(y)

    # Print the resulting array
    print(" ".join(map(str, result)))