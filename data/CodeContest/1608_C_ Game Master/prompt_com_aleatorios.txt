CURRENT QUESTION:
n players are playing a game. 

There are two different maps in the game. For each player, we know his strength on each map. When two players fight on a specific map, the player with higher strength on that map always wins. No two players have the same strength on the same map. 

You are the game master and want to organize a tournament. There will be a total of n-1 battles. While there is more than one player in the tournament, choose any map and any two remaining players to fight on it. The player who loses will be eliminated from the tournament. 

In the end, exactly one player will remain, and he is declared the winner of the tournament. For each player determine if he can win the tournament.

Input

The first line contains a single integer t (1 ≤ t ≤ 100) — the number of test cases. The description of test cases follows.

The first line of each test case contains a single integer n (1 ≤ n ≤ 10^5) — the number of players.

The second line of each test case contains n integers a_1, a_2, ..., a_n (1 ≤ a_i ≤ 10^9, a_i ≠ a_j for i ≠ j), where a_i is the strength of the i-th player on the first map. 

The third line of each test case contains n integers b_1, b_2, ..., b_n (1 ≤ b_i ≤ 10^9, b_i ≠ b_j for i ≠ j), where b_i is the strength of the i-th player on the second map. 

It is guaranteed that the sum of n over all test cases does not exceed 10^5.

Output

For each test case print a string of length n. i-th character should be "1" if the i-th player can win the tournament, or "0" otherwise.

Example

Input


3
4
1 2 3 4
1 2 3 4
4
11 12 20 21
44 22 11 30
1
1000000000
1000000000


Output


0001
1111
1

Note

In the first test case, the 4-th player will beat any other player on any game, so he will definitely win the tournament.

In the second test case, everyone can be a winner. 

In the third test case, there is only one player. Clearly, he will win the tournament.

EXAMPLE QUESTIONS:
Example question 1:
Name: cw5
Tags: []
Description: With her new hair-style, Penny has to listen to all the comments of Sheldon Cooper. She (God knows why) challenged Sheldon Cooper for a match of Chess. Penny wants to defeat Dr. Sheldon Cooper in the game of chess. Although, she tried very hard, she is in a situation and wants your help. It is your duty to help Penny. The situation goes like this. Penny has only "King" left with her, while Sheldon has a King, a Queen, a Rook and a Bishop. You are given a situation of a chess board as input.  
Sheldon has given Penny a CHECK, you need to tell Penny, whether this is the end of the game or she still has a chance. In case, she still has a choice, ensure she is safe in the next step too.
 P.S. All rules of chess apply here. The death of a King is considered as end of the game. You can also refer to  http://en.wikipedia.org/wiki/Chess for the rules.
Input
A description of the 8X8 chessboard grid is given. Empty boxes are shown as "_", Penny's King is shown by P, Sheldon's king is shown by S, and the queen, rook and bishop are shown by Q, R and B respectively.
Output
Print CHECKMATE! if its a checkmate, else print NOT YET!. Consider each and every possible ways, and remember ALL rules of Chess applies here.
Example
 Input:
____B___
________
__Q_____
________
____P_S_
_R______
________
________
 Output:
NOT YET!
 Input:
 ________
________
___S____
______B_
Q__P___
_R______
________
________
 Output:
CHECKMATE!
Explanation
Example case 1. Penny can still move her King to either one step Up or one step to left. So, this isn't a checkmate.
Difficulty: 6
Solutions: #!/usr/local/bin/python2.7
    
print "NOT YET!";


INSTRUCTIONS:
Solve the current question.
Provide:
1. A complete and efficient code solution, optimized for both time and space complexity.
2. A detailed explanation of the solution, including:
   - The intuition behind the approach;
   - Time and space complexity;
   - Important considerations about the algorithm.
3. You can use the example questions as general references for coding patterns and structure, but solve the current problem independently.
4. Don't use any external libraries. Any language is accepted.