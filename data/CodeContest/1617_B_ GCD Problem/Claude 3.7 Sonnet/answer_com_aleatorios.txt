#include <iostream>
using namespace std;

void solve() {
    long long n;
    cin >> n;
    
    // We'll use the construction where c = 3, a = 6, b = n-9
    // This works when n â‰¥ 12 because:
    // 1. a + b + c = 6 + (n-9) + 3 = n
    // 2. gcd(6, n-9) = 3 = c when n-9 is divisible by 3
    
    // We make the numbers divisible by 3, so gcd(a,b) = 3
    
    if (n >= 12) {
        cout << 6 << " " << n - 9 << " " << 3 << endl;
    } else {
        // Handle specific small cases
        if (n == 10) {
            // 4 + 5 + 1 = 10, gcd(4,5) = 1
            cout << 4 << " " << 5 << " " << 1 << endl;
        } else if (n == 11) {
            // 7 + 3 + 1 = 11, gcd(7,3) = 1
            cout << 7 << " " << 3 << " " << 1 << endl;
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    
    int t;
    cin >> t;
    
    while (t--) {
        solve();
    }
    
    return 0;
}