def is_level_complete(n, grid):
    # Initialize a 2D DP array to store whether each cell is reachable
    dp = [[False for _ in range(n)] for _ in range(2)]
    
    # Initialize the first cell as reachable
    dp[0][0] = grid[0][0] == '0'
    
    for j in range(1, n):
        # Update the current row based on the previous row
        dp[0][j] = dp[0][j-1] and grid[0][j] == '0'
    
    for i in range(1, 2):
        # Update the current row based on the previous row and the cell above
        dp[i][0] = dp[i-1][0] and grid[i][0] == '0'
    
        for j in range(1, n):
            dp[i][j] = (dp[i-1][j] or dp[i][j-1] or dp[i-1][j-1]) and grid[i][j] == '0'
    
    # Check if the last cell is reachable
    return dp[1][n-1]

# Number of test cases
t = int(input())

for _ in range(t):
    n = int(input())
    grid = [input() for _ in range(2)]
    
    if is_level_complete(n, grid):
        print("YES")
    else:
        print("NO")