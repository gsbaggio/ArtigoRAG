def max_value_array(n, a):
    # Initialize the result array with the input array
    result = a[:]
    
    # Dictionary to keep track of the last occurrence of each number
    last_occurrence = {}
    
    # Fill the gaps in the array
    for i in range(n):
        if result[i] == 0:
            # Determine the candidate numbers to fill the gap
            candidates = []
            if i > 0 and result[i-1] != 0:
                candidates.append(result[i-1])
            if i < n-1 and result[i+1] != 0:
                candidates.append(result[i+1])
            
            # Find the smallest unused number that can form a new pair
            for num in range(1, n+1):
                if num not in last_occurrence or last_occurrence[num] < i-1:
                    if not candidates or abs(num - candidates[0]) > 1 or abs(num - candidates[1]) > 1:
                        result[i] = num
                        last_occurrence[num] = i
                        break
    
    return result

# Read input
import sys
input = sys.stdin.read().split()
n = int(input[0])
a = list(map(int, input[1:]))

# Get the result
result = max_value_array(n, a)

# Print the result
print(" ".join(map(str, result)))