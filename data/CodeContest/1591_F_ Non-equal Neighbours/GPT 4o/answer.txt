MOD = 998244353

def count_valid_arrays(n, a):
    # Initialize dp array
    dp = [0] * (max(a) + 1)
    prefix = [0] * (max(a) + 2)
    
    # Base case: dp[0][j] = 1 for all 1 <= j <= a[0]
    for j in range(1, a[0] + 1):
        dp[j] = 1
    
    # Iterate over the array
    for i in range(1, n):
        # Compute prefix sums for dp[i-1]
        prefix[0] = 0
        for j in range(1, max(a) + 2):
            prefix[j] = (prefix[j-1] + dp[j-1]) % MOD
        
        # Update dp[i]
        new_dp = [0] * (max(a) + 1)
        for j in range(1, a[i] + 1):
            # Total valid transitions to dp[i][j]
            new_dp[j] = (prefix[a[i] + 1] - prefix[j] + MOD) % MOD
            new_dp[j] = (new_dp[j] + prefix[j-1]) % MOD
        
        dp = new_dp
    
    # Final result: sum of dp[n-1][j] for all 1 <= j <= a[n-1]
    return sum(dp) % MOD

# Input reading
n = int(input())
a = list(map(int, input().split()))

# Output the result
print(count_valid_arrays(n, a))