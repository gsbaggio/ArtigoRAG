import math

def main():
    import sys
    data = sys.stdin.read().split()
    if not data:
        return
    
    it = iter(data)
    n = int(next(it)); q = int(next(it))
    p_list = [0] * n
    for i in range(n):
        p_list[i] = int(next(it))
    
    p = [0] * (n+1)
    for i in range(1, n+1):
        p[i] = p_list[i-1]
    
    inv = [0] * (n+1)
    for i in range(1, n+1):
        inv[p[i]] = i
        
    step = 317
    if n < step:
        step = n
        
    next1 = [0] * (n+1)
    for i in range(1, n+1):
        node = i
        for j in range(step):
            node = p[node]
        next1[i] = node
        
    out_lines = []
    for _ in range(q):
        t = int(next(it))
        if t == 1:
            x = int(next(it)); y = int(next(it))
            a = p[x]
            b = p[y]
            p[x] = b
            p[y] = a
            inv[a] = y
            inv[b] = x
            
            nodes_set = set()
            temp = x
            for j in range(step):
                nodes_set.add(temp)
                temp = inv[temp]
            temp = y
            for j in range(step):
                nodes_set.add(temp)
                temp = inv[temp]
                
            for i in nodes_set:
                node = i
                for j in range(step):
                    node = p[node]
                next1[i] = node
                
        else:
            i = int(next(it)); k = int(next(it))
            while k >= step:
                i = next1[i]
                k -= step
            for j in range(k):
                i = p[i]
            out_lines.append(str(i))
            
    sys.stdout.write("\n".join(out_lines))
    
if __name__ == "__main__":
    main()