def solve():
    import sys
    input = sys.stdin.read
    data = input().splitlines()
    
    t = int(data[0])  # Number of test cases
    results = []
    idx = 1
    
    for _ in range(t):
        n = int(data[idx])  # Length of the word
        bigrams = data[idx + 1].split()  # List of bigrams
        idx += 2
        
        # Start reconstructing the word
        word = bigrams[0]  # Start with the first bigram
        
        for i in range(1, len(bigrams)):
            if bigrams[i][0] == word[-1]:  # If the first char matches the last char of the word
                word += bigrams[i][1]  # Append the second char of the bigram
            else:
                # Missing bigram detected, append the full bigram
                word += bigrams[i]
        
        # If the word length is less than n, append the last character
        if len(word) < n:
            word += 'a'  # Append 'a' or 'b' (both are valid)
        
        results.append(word)
    
    # Print all results
    sys.stdout.write("\n".join(results) + "\n")