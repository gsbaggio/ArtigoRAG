import math

def calculate_distance(p1, p2):
    return math.sqrt((p1[0] - p2[0]) ** 2 + (p1[1] - p2[1]) ** 2)

def min_path_length(N, K, points):
    distances = []
    for i in range(N):
        if i != K - 1:
            distances.append((calculate_distance(points[K-1], points[i]), i))

    distances.sort()

    total_length = 0
    current_point = K - 1
    for dist, idx in distances:
        total_length += dist
        current_point = idx

    return total_length

# Read input
N, K = map(int, input().split())
points = [tuple(map(int, input().split())) for _ in range(N)]

# Calculate and print the result
result = min_path_length(N, K, points)
print(result)