#include <iostream>
#include <vector>
#include <unordered_set>
using namespace std;

void solve() {
    int n;
    cin >> n;
    
    vector<int> a(n);
    unordered_set<int> nums;
    
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        nums.insert(a[i]);
    }
    
    vector<pair<int, int>> result;
    int pairs_needed = n / 2;
    
    for (int i = 0; i < n && result.size() < pairs_needed; i++) {
        for (int j = 0; j < n && result.size() < pairs_needed; j++) {
            if (i == j) continue;
            
            int x = a[i];
            int y = a[j];
            int mod_result = x % y;
            
            if (nums.find(mod_result) == nums.end()) {
                result.push_back({x, y});
            }
        }
    }
    
    // Print results
    for (auto& p : result) {
        cout << p.first << " " << p.second << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}