mod = 10**9 + 7

import sys

def main():
    data = sys.stdin.read().split()
    if not data:
        return
    n = int(data[0])
    a = list(map(int, data[1:1 + n]))
    
    M_val = 100000
    max_val = max(n, M_val)
    
    phi_arr = list(range(max_val + 1))
    for i in range(2, max_val + 1):
        if phi_arr[i] == i:
            for j in range(i, max_val + 1, i):
                phi_arr[j] -= phi_arr[j] // i
                
    divisors_of_index = [[] for _ in range(n + 1)]
    for i in range(1, n + 1):
        for j in range(i, n + 1, i):
            divisors_of_index[j].append(i)
            
    divisors_of_arrval = [[] for _ in range(M_val + 1)]
    for i in range(1, M_val + 1):
        for j in range(i, M_val + 1, i):
            divisors_of_arrval[j].append(i)
            
    B_g = [[] for _ in range(M_val + 1)]
    for idx in range(n):
        x = a[idx]
        for d in divisors_of_arrval[x]:
            if d <= M_val:
                B_g[d].append(idx + 1)
                
    total_ans = 0
    for g in range(1, M_val + 1):
        if not B_g[g]:
            continue
        cnt = {}
        for index_val in B_g[g]:
            for d in divisors_of_index[index_val]:
                cnt[d] = cnt.get(d, 0) + 1
        S_g = 0
        for d, count in cnt.items():
            S_g = (S_g + phi_arr[d] * count * count) % mod
        total_ans = (total_ans + phi_arr[g] * S_g) % mod
        
    print(total_ans)

if __name__ == "__main__":
    main()