def solve():
    n = int(input())
    dominoes = []
    for _ in range(n):
        dominoes.append(input())

    def is_valid(coloring):
        for i in range(n):
            if coloring[i][1] == coloring[(i + 1) % n][0]:
                return False
        return True

    def count_valid_colorings(index, current_coloring):
        if index == n:
            if is_valid(current_coloring):
                return 1
            else:
                return 0

        domino = dominoes[index]
        count = 0

        def get_possible_colors(domino_str):
            possible_dominoes = []
            if domino_str[0] == '?' and domino_str[1] == '?':
                possible_dominoes.append("BB")
                possible_dominoes.append("BW")
                possible_dominoes.append("WB")
                possible_dominoes.append("WW")
            elif domino_str[0] == '?':
                if domino_str[1] == 'B':
                    possible_dominoes.append("BB")
                    possible_dominoes.append("WB")
                else:
                    possible_dominoes.append("BW")
                    possible_dominoes.append("WW")
            elif domino_str[1] == '?':
                if domino_str[0] == 'B':
                    possible_dominoes.append("BB")
                    possible_dominoes.append("BW")
                else:
                    possible_dominoes.append("WB")
                    possible_dominoes.append("WW")
            else:
                possible_dominoes.append(domino_str)
            return possible_dominoes

        possible_colors = get_possible_colors(domino)

        for color in possible_colors:
            count = (count + count_valid_colorings(index + 1, current_coloring + [color])) % 998244353

        return count

    print(count_valid_colorings(0, []))

solve()