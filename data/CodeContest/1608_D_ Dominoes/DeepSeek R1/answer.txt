mod = 998244353

def precompute_factorials(n, mod):
    fact = [1] * (n+1)
    inv_fact = [1] * (n+1)
    for i in range(1, n+1):
        fact[i] = fact[i-1] * i % mod
    inv_fact[n] = pow(fact[n], mod-2, mod)
    for i in range(n, 0, -1):
        inv_fact[i-1] = inv_fact[i] * i % mod
    return fact, inv_fact

max_n = 200000
fact, inv_fact = precompute_factorials(max_n, mod)

def nCr(n, r):
    if r < 0 or r > n:
        return 0
    return fact[n] * inv_fact[r] % mod * inv_fact[n-r] % mod

def main():
    import sys
    data = sys.stdin.read().splitlines()
    n = int(data[0])
    A = 0; B = 0; C = 0; D = 0; E = 0; F = 0; G = 0; H = 0
    for i in range(1, n+1):
        s = data[i].strip()
        left = s[0]; right = s[1]
        if left != '?' and right != '?':
            if left == 'B' and right == 'B':
                A += 1
            elif left == 'W' and right == 'W':
                B += 1
            else:
                C += 1
        else:
            if left != '?' and right == '?':
                if left == 'B':
                    D += 1
                else:
                    E += 1
            elif left == '?' and right != '?':
                if right == 'B':
                    F += 1
                else:
                    G += 1
            else:
                H += 1
                
    M = D + F + E + G + 2 * H
    T = A - B - E - G
    ways = nCr(M, H - T)
    
    total_BW_WB = 0
    if A == 0 and B == 0:
        total_BW_WB = pow(2, H, mod)
        
    only_BW = 1
    if A > 0 or B > 0:
        only_BW = 0
    if E > 0 or F > 0:
        only_BW = 0
        
    only_WB = 1
    if A > 0 or B > 0:
        only_WB = 0
    if D > 0 or G > 0:
        only_WB = 0
        
    ans = (ways - (total_BW_WB - only_BW - only_WB)) % mod
    if ans < 0:
        ans += mod
    print(ans)
    
if __name__ == '__main__':
    main()