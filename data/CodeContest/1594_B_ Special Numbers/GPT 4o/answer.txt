MOD = 10**9 + 7

def find_kth_special_number(n, k):
    result = 0
    power = 1  # Represents n^0 initially
    while k > 0:
        if k % 2 == 1:  # If the current binary digit is 1
            result = (result + power) % MOD
        power = (power * n) % MOD  # Move to the next power of n
        k //= 2  # Shift to the next binary digit
    return result

def main():
    import sys
    input = sys.stdin.read
    data = input().split()
    
    t = int(data[0])  # Number of test cases
    results = []
    index = 1
    for _ in range(t):
        n, k = map(int, data[index:index+2])
        index += 2
        results.append(find_kth_special_number(n, k))
    
    # Print all results
    sys.stdout.write("\n".join(map(str, results)) + "\n")

if __name__ == "__main__":
    main()