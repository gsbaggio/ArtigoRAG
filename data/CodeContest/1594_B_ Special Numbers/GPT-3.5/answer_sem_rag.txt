MOD = 10**9 + 7

def special_numbers(n, k):
    special = [1]
    current = 1
    for i in range(2, 32):  # The upper bound 32 is chosen because the maximum n is 10^9, and log2(10^9) < 32
        current *= n
        if current > 10**9:
            break
        special.append(current)
    
    prefix_sums = [0] * (1 << len(special))
    for i in range(1, len(prefix_sums)):
        for j in range(len(special)):
            if i & (1 << j):
                prefix_sums[i] = (prefix_sums[i] + special[j]) % MOD
    
    return prefix_sums[k]

# Input reading and processing
t = int(input())
for _ in range(t):
    n, k = map(int, input().split())
    result = special_numbers(n, k)
    print(result)